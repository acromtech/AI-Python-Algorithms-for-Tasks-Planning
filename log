10
town10 avec 3 couleurs (attendu True) :  True
Base de clause utilise  30  variables et contient les clauses suivantes :
[1001, 1002, 1003]
[2001, 2002, 2003]
[3001, 3002, 3003]
[4001, 4002, 4003]
[5001, 5002, 5003]
[6001, 6002, 6003]
[7001, 7002, 7003]
[8001, 8002, 8003]
[9001, 9002, 9003]
[10001, 10002, 10003]
[-1001, -2001]
[-1001, -3001]
[-1002, -2002]
[-1002, -3002]
[-1003, -2003]
[-1003, -3003]
[-2001, -1001]
[-2001, -4001]
[-2001, -5001]
[-2002, -1002]
[-2002, -4002]
[-2002, -5002]
[-2003, -1003]
[-2003, -4003]
[-2003, -5003]
[-3001, -1001]
[-3001, -4001]
[-3001, -6001]
[-3002, -1002]
[-3002, -4002]
[-3002, -6002]
[-3003, -1003]
[-3003, -4003]
[-3003, -6003]
[-4001, -2001]
[-4001, -3001]
[-4001, -5001]
[-4001, -7001]
[-4002, -2002]
[-4002, -3002]
[-4002, -5002]
[-4002, -7002]
[-4003, -2003]
[-4003, -3003]
[-4003, -5003]
[-4003, -7003]
[-5001, -2001]
[-5001, -4001]
[-5001, -6001]
[-5001, -9001]
[-5002, -2002]
[-5002, -4002]
[-5002, -6002]
[-5002, -9002]
[-5003, -2003]
[-5003, -4003]
[-5003, -6003]
[-5003, -9003]
[-6001, -3001]
[-6001, -5001]
[-6001, -7001]
[-6002, -3002]
[-6002, -5002]
[-6002, -7002]
[-6003, -3003]
[-6003, -5003]
[-6003, -7003]
[-7001, -4001]
[-7001, -6001]
[-7001, -8001]
[-7001, -9001]
[-7002, -4002]
[-7002, -6002]
[-7002, -8002]
[-7002, -9002]
[-7003, -4003]
[-7003, -6003]
[-7003, -8003]
[-7003, -9003]
[-8001, -7001]
[-8001, -9001]
[-8001, -10001]
[-8002, -7002]
[-8002, -9002]
[-8002, -10002]
[-8003, -7003]
[-8003, -9003]
[-8003, -10003]
[-9001, -5001]
[-9001, -7001]
[-9001, -8001]
[-9001, -10001]
[-9002, -5002]
[-9002, -7002]
[-9002, -8002]
[-9002, -10002]
[-9003, -5003]
[-9003, -7003]
[-9003, -8003]
[-9003, -10003]
[-10001, -8001]
[-10001, -9001]
[-10002, -8002]
[-10002, -9002]
[-10003, -8003]
[-10003, -9003]
town10 avec 2 couleurs (attendu False) :  False
town10 avec 4 couleurs (attendu True) :  True
20
flat20_3_0.col avec 4 couleurs (attendu True) :  True
flat20_3_0.col avec 3 couleurs (attendu True) :  True
flat20_3_0.col avec 2 couleurs (attendu False) :  False
80
jean.col avec 10 couleurs (attendu True) :  True
jean.col avec 9 couleurs (attendu False) :  False
jean.col avec 3 couleurs (attendu False) :  False
10
Sur 10 villes de 0  à  9  : [ 9 8 4 1 0 ]
la lg du plus court chemin est  1190.971503412202
9
=======(nb d'etats explores = 7)========
=======(nb d'etats generes = 21)========

Sur 10 villes de 5  à  9  : [ 9 8 6 5 ]
la lg du plus court chemin est  858.6177055898913
9
=======(nb d'etats explores = 5)========
=======(nb d'etats generes = 16)========

Sur 10 villes de 2  à  9  : [ 9 8 6 3 2 ]
la lg du plus court chemin est  1090.639192762493
9
=======(nb d'etats explores = 10)========
=======(nb d'etats generes = 31)========

Sur 10 villes de 1  à  7  : [ 7 6 3 1 ]
la lg du plus court chemin est  889.1949043390727
7
=======(nb d'etats explores = 5)========
=======(nb d'etats generes = 14)========

26
Sur 26 villes de 0  à  25  : [ 25 24 19 16 12 5 3 0 ]
la lg du plus court chemin est  1856.5
25
=======(nb d'etats explores = 20)========
=======(nb d'etats generes = 76)========

146
Sur 146 villes de 0  à  145  : [ 145 133 111 89 69 45 5 0 ]
la lg du plus court chemin est  1143.0000000000002
145
=======(nb d'etats explores = 150)========
=======(nb d'etats generes = 1327)========

998
Sur 998 villes de 0  à  997  : [ 997 964 829 646 386 261 126 0 ]
la lg du plus court chemin est  726.7
997
=======(nb d'etats explores = 1000)========
=======(nb d'etats generes = 44862)========

10
sur 10 villes : [0, 1, 3, 4, 8, 9, 7, 6, 5, 2, 0]
la lg du plus court chemin est  3792.190362007193
0 1 3 4 8 9 7 6 5 2 0
=======(nb d'etats explores = 330)========
=======(nb d'etats generes = 341)========

6
Le chemin trouvé est : 
0 -> 1 -> 2 -> 3 -> 5 -> 4 -> 0
la lg du plus court chemin est  1360.6495955560758
0 1 2 3 5 4 0
=======(nb d'etats explores = 131)========
=======(nb d'etats generes = 238)========

7
Le chemin trouvé est : 
0 -> 1 -> 2 -> 3 -> 6 -> 5 -> 4 -> 0
la lg du plus court chemin est  1638.459980067224
0 1 2 3 6 5 4 0
=======(nb d'etats explores = 552)========
=======(nb d'etats generes = 1110)========

8
Le chemin trouvé est : 
0 -> 4 -> 5 -> 7 -> 6 -> 3 -> 2 -> 1 -> 0
la lg du plus court chemin est  1729.6228205017967
0 4 5 7 6 3 2 1 0
=======(nb d'etats explores = 1430)========
=======(nb d'etats generes = 3514)========

9
Le chemin trouvé est : 
0 -> 1 -> 2 -> 3 -> 6 -> 7 -> 5 -> 8 -> 4 -> 0
la lg du plus court chemin est  1855.2162397331167
0 1 2 3 6 7 5 8 4 0
=======(nb d'etats explores = 4796)========
=======(nb d'etats generes = 13342)========

10
======== Solver 1 pour 10 villes de 0 a 9 : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Le chemin optimal est : 7 9 3 6 5 8 4 1 0 2 7
La meilleure solution a une valeur de 2840.498094901218=======(arret apres 100 essais : nb d'etats explores = 142)========


======== Solver 2 pour 10 villes de 0 a 9 : 

	 Il y a 90 tabou(s) :

La meilleure solution obtenue : Le chemin optimal est : 7 5 8 9 4 0 1 2 3 6 7
La meilleure solution a une valeur de 2026.2675322208258=======(arret apres 100 essais : nb d'etats explores = 100)========

26

======== Solver 1 pour 26 villes de 0 a 25 : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Le chemin optimal est : 16 25 17 3 1 22 23 14 10 9 6 7 5 4 2 8 0 13 20 19 21 24 15 18 12 11 16
La meilleure solution a une valeur de 6266.682822219464=======(arret apres 100 essais : nb d'etats explores = 155)========


======== Solver 2 pour 26 villes de 0 a 25 : 

	 Il y a 65 tabou(s) :

La meilleure solution obtenue : Le chemin optimal est : 1 6 3 2 0 5 7 10 15 14 22 25 24 21 23 18 11 12 9 16 19 20 17 13 8 4 1
La meilleure solution a une valeur de 2810.698302010706=======(arret apres 100 essais : nb d'etats explores = 200)========

146

======== Solver 1 pour 150 villes : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Le chemin optimal est : 36 130 131 38 54 20 28 145 132 77 69 53 33 123 62 105 126 4 41 12 11 5 3 1 138 122 112 80 99 76 78 88 34 19 9 6 30 31 83 70 14 50 65 27 86 29 21 75 17 0 106 102 61 73 90 134 121 23 87 91 119 16 58 97 142 67 136 26 81 60 45 8 39 135 109 43 89 98 13 85 56 66 111 64 94 108 137 144 57 59 44 82 125 124 40 32 15 63 49 7 100 24 117 107 92 127 47 71 52 74 96 95 46 51 37 79 18 101 141 55 103 84 48 25 116 104 2 113 22 110 114 140 115 93 35 118 42 68 72 133 128 139 10 129 143 120 36
La meilleure solution a une valeur de 38028.439282396095=======(arret apres 100 essais : nb d'etats explores = 185)========


======== Solver 2 pour 150 villes : 

	 Il y a 0 tabou(s) :

La meilleure solution obtenue : Le chemin optimal est : 58 45 27 2 24 7 41 32 36 30 17 18 8 6 19 9 16 31 0 3 23 1 38 49 79 91 57 54 60 63 68 40 51 34 55 59 44 37 25 46 35 66 65 70 56 48 39 92 85 93 87 78 108 75 103 137 131 126 139 114 141 104 107 111 144 128 145 133 125 135 134 83 80 94 113 97 90 53 72 89 82 95 96 28 4 12 22 14 42 10 15 20 13 43 62 61 64 29 33 5 47 11 21 26 69 84 115 100 142 124 129 130 132 105 136 123 121 101 116 112 99 106 119 98 138 127 143 122 140 110 117 118 120 86 74 50 52 81 73 76 109 102 71 67 88 77 58
La meilleure solution a une valeur de 12179.016383371227=======(arret apres 100 essais : nb d'etats explores = 300)========

998

======== Solver 1 pour 1000 villes : 

HC avec plusieurs essais et tirage aleatoire d'une nelle solution pour chaque essai

La meilleure solution obtenue : Le chemin optimal est
La meilleure solution a une valeur de 277570.95222974196=======(arret apres 100 essais : nb d'etats explores = 213)========


======== Solver 2 pour 1000 villes : 

	 Il y a 0 tabou(s) :

La meilleure solution obtenue : Le chemin optimal est
La meilleure solution a une valeur de 211703.9336309857=======(arret apres 100 essais : nb d'etats explores = 400)========


========== TEST  ==========
=============================
10

Test sur town10 avec 3 couleurs (on attend OK) :
======== OK avec 3 couleurs !
	 |  	 (nb de solutions = 66)
	0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 3 | 1 = 1 | 2 = 2 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 3 | 4 = 2 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 3 | 1 = 2 | 2 = 1 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 1 | 3 = 3 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 1 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 1 | 3 = 3 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 3 | 1 = 2 | 2 = 1 | 3 = 3 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 2 | 1 = 1 | 2 = 3 | 3 = 2 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 3 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 3 | 3 = 2 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 3 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 2 | 1 = 1 | 2 = 3 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 3 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 2 | 1 = 1 | 2 = 1 | 3 = 2 | 4 = 3 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 2 | 1 = 3 | 2 = 1 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 1 | 3 = 2 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 1 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 2 | 8 = 3 | 9 = 1 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 1 | 3 = 2 | 4 = 1 | 5 = 3 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 2 | 1 = 3 | 2 = 1 | 3 = 2 | 4 = 1 | 5 = 2 | 6 = 1 | 7 = 3 | 8 = 2 | 9 = 1 | 
	0 = 1 | 1 = 3 | 2 = 2 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 2 | 3 = 1 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 2 | 3 = 1 | 4 = 2 | 5 = 3 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 2 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 2 | 7 = 1 | 8 = 3 | 9 = 2 | 
	0 = 1 | 1 = 3 | 2 = 2 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 2 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 1 | 1 = 3 | 2 = 3 | 3 = 1 | 4 = 2 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 2 | 7 = 3 | 8 = 1 | 9 = 2 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 1 | 8 = 2 | 9 = 3 | 
	0 = 3 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 2 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 3 | 5 = 2 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 3 | 5 = 1 | 6 = 3 | 7 = 2 | 8 = 1 | 9 = 3 | 
	

Test sur town10 avec 2 couleurs (on attend NOK) :
======== NOK ! Pas de solution

Test sur town10 avec 4 couleurs (on attend OK) :
======== OK avec 4 couleurs !
	 | 0 = 4 | 1 = 2 | 2 = 3 | 3 = 4 | 4 = 3 | 5 = 4 | 6 = 3 | 7 = 2 | 8 = 4 | 9 = 3 | 
20
Test sur flat20_3_0.col avec 4 couleurs (on attend OK) :
======== OK avec 4 couleurs !
	 | 0 = 2 | 1 = 3 | 2 = 4 | 3 = 2 | 4 = 2 | 5 = 2 | 6 = 3 | 7 = 3 | 8 = 3 | 9 = 2 | 10 = 2 | 11 = 4 | 12 = 4 | 13 = 3 | 14 = 4 | 15 = 4 | 16 = 3 | 17 = 3 | 18 = 4 | 19 = 2 | 
Test sur flat20_3_0.col avec 3 couleurs (on attend OK) :
======== OK avec 3 couleurs !
	 | 0 = 1 | 1 = 2 | 2 = 3 | 3 = 1 | 4 = 1 | 5 = 1 | 6 = 2 | 7 = 2 | 8 = 2 | 9 = 1 | 10 = 1 | 11 = 3 | 12 = 3 | 13 = 2 | 14 = 3 | 15 = 3 | 16 = 2 | 17 = 2 | 18 = 3 | 19 = 1 | 
Test sur flat20_3_0.col avec 2 couleurs (on attend NOK) :
======== NOK ! Pas de solution
80
Test sur jean.col avec 10 couleurs (on attend OK) :
======== OK avec 10 couleurs !
	 | 0 = 10 | 1 = 8 | 2 = 9 | 3 = 8 | 4 = 7 | 5 = 6 | 6 = 5 | 7 = 10 | 8 = 7 | 9 = 9 | 10 = 10 | 11 = 10 | 12 = 10 | 13 = 9 | 14 = 8 | 15 = 10 | 16 = 8 | 17 = 10 | 18 = 4 | 19 = 6 | 20 = 10 | 21 = 5 | 22 = 10 | 23 = 10 | 24 = 8 | 25 = 10 | 26 = 7 | 27 = 8 | 28 = 7 | 29 = 7 | 30 = 9 | 31 = 10 | 32 = 10 | 33 = 10 | 34 = 5 | 35 = 10 | 36 = 10 | 37 = 3 | 38 = 4 | 39 = 6 | 40 = 10 | 41 = 8 | 42 = 9 | 43 = 6 | 44 = 9 | 45 = 7 | 46 = 3 | 47 = 9 | 48 = 10 | 49 = 3 | 50 = 10 | 51 = 10 | 52 = 9 | 53 = 10 | 54 = 4 | 55 = 9 | 56 = 7 | 57 = 3 | 58 = 9 | 59 = 8 | 60 = 9 | 61 = 9 | 62 = 5 | 63 = 7 | 64 = 10 | 65 = 6 | 66 = 9 | 67 = 2 | 68 = 4 | 69 = 9 | 70 = 10 | 71 = 9 | 72 = 3 | 73 = 10 | 74 = 7 | 75 = 10 | 76 = 6 | 77 = 8 | 78 = 1 | 79 = 10 | 
Test sur jean.col avec 3 couleurs (on attend NOK) :
======== NOK ! Pas de solution
Test sur jean.col avec 9 couleurs (on attend NOK) :
Reading package lists...
Building dependency tree...
Reading state information...
libtbb-dev is already the newest version (2021.5.0-7ubuntu2).
0 upgraded, 0 newly installed, 0 to remove and 57 not upgraded.
Reading package lists...
Building dependency tree...
Reading state information...
libopenblas-base is already the newest version (0.3.20+ds-1).
0 upgraded, 0 newly installed, 0 to remove and 57 not upgraded.
Pour  6  villes          1360.64959555608
Pour  7  villes          1638.45998006722
Pour  8  villes          1729.6228205018
Pour  9  villes          1855.21623973312
Pour  10  villes         2026.26753222083
Pour  11  villes         2204.34930872984
Pour  12  villes         2231.43211218805
Pour  13  villes         2247.70309854912
Pour  14  villes         2311.70111550665
Pour  15  villes         2317.57076714782
Pour  16  villes         2353.80139215921
Pour  17  villes         2369.65704299013
Pour  18  villes         2376.85028163456
Pour  19  villes         2405.14241771809

